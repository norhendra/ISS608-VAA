{
  "hash": "eb07191813f6099b811a9f95485e285e",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take-home Exercise 1: Phase 1\"\nauthor: \"Nor Hendra\"\ndate: \"30 April 2025\"\ndate-modified: \"last-modified\"\nformat: html\ncode-fold: true\ncode-summary: \"Show code\"\neditor: visual\nfreeze: true\nexecute:\n  eval: true\n  echo: true\n  warning: false\n---\n\n```{=html}\n<style>\np {\n  text-align: justify;\n}\nbody, \nbody p, \nbody h1, \nbody h2, \nbody h3, \nbody h4, \nbody h5, \nbody h6, \nbody li {\n  color: #000 !important;\n}\n</style>\n```\n\n\n\n# Foreword\n\nIn this take‑home exercise, I’m assuming the role of graphical editor at a local online media outlet that publishes daily across digital platforms. I’ll employ a range of charts to illuminate Singapore’s 2024 demographic landscape, guiding you through my data‑cleaning process and my “Plot Approach” notes for each visualization. More than simply presenting figures, **my overarching aim is to shape these charts and their accompanying narratives into a seamless, story‑driven article**, just as you would see in a professional feature where every plot advances the data story and keeps readers engaged, all while ensuring honest, accurate and aesthetic plots.\n\nUse below links to skip ahead.\n\n::: callout-tip\n## Content\n\n-   [Getting Started (Importing Packages and Data)](#importing)\n\n-   [Data Cleaning and Quality Checks](#datacleanqc)\n\n-   [Article - Of Roots and Horizons: Singapore’s Generational Odyssey in 2024](#article)\n:::\n\n# 1. Getting Started\n\nLet's first import packages and data for this article.\n\n## 1.1 Importing Packages {#importing}\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggthemes,viridis,ggridges,ggrepel,patchwork, readr, dplyr, forcats, scales, ggtext, matrixStats)\n```\n:::\n\n\n\n## 1.2 Importing Data\n\nI have attained this data as per the handout's requirement.\n\n**Source:** [Singstat](https://www.singstat.gov.sg/find-data/search-by-theme/population/geographic-distribution/latest-data)\n\nIt would be under the 'Population Trends' tab titled *Singapore Residents by Planning Area / Subzone, Single Year of Age and Sex, June 2024*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 3.1 Import\nsgdemo2024 <- read_csv((\"data/respopagesex2024.csv\"), show_col_types = FALSE)\n```\n:::\n\n\n\n### 1.3 Quick check of data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(sgdemo2024)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n\n# 2. Data Cleaning and Quality Checks {#datacleanqc}\n\nBefore we proceed with plotting, we will first need to ensure data is clean to ensure accurate plots.\n\n## 2.1 Converting Sex to a factor with the correct order\n\nBy coercing Sex into a factor with a known level order to give full, explicit control over how it's displayed in every plot and keeps the downstream code faster and more robust.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsgdemo2024 <- sgdemo2024 %>%\n  mutate(\n    Sex = factor(Sex, levels = c(\"Males\", \"Females\"))\n  )\n```\n:::\n\n\n\n## 2.2 Count missing values by column\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4.1 Check for missing values and confirm none\nmissing_counts <- sgdemo2024 %>% \n  summarise_all(~ sum(is.na(.)))\n\nif (all(unlist(missing_counts) == 0)) {\n  cat(\"✅ No missing values, proceed to the next check\\n\")\n} else {\n  warning(\"⚠️ Missing values detected:\")\n  print(missing_counts)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ No missing values, proceed to the next check\n```\n\n\n:::\n:::\n\n\n\n## 2.3 Checking for any duplicates\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndup_count <- sum(duplicated(sgdemo2024))\n\nif (dup_count == 0) {\n  cat(\"✅ No duplicates, on to the next!\\n\")\n} else {\n  warning(\"⚠️ Found duplicate rows:\")\n  print(sgdemo2024[duplicated(sgdemo2024), ])\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ No duplicates, on to the next!\n```\n\n\n:::\n:::\n\n\n\n## 2.4 Ensure population is strictly positive\n\n::: callout-important\n## Removing zero population rows\n\nScrolling through the data, I found zero-population rows which simply means that no one of that age and sex lives in that subzone. If we add these to the plot, it will -\n\n1.  Add unnecessary clutter of showing up thousands of empty bars or tiles that distract from where people actually live. More importantly,\n\n<!-- -->\n\n2.  It obscures the story I am trying to tell - the audience cares about real population, not the zero-density grid.\n\nHence, it is crucial to remove these rows\n:::\n\n**Step 1: Checking for zero-population rows.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Check for zero-population rows\nzero_rows <- sgdemo2024 %>% \n  filter(Pop == 0)\n\nif (nrow(zero_rows) > 0) {\n  cat(\"⚠️ Found\", nrow(zero_rows), \"rows with Pop == 0 (empty demographic cells):\\n\")\n  print(head(zero_rows))    # show a few examples\n} else {\n  cat(\"✅ No zero‐population rows found.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n⚠️ Found 23181 rows with Pop == 0 (empty demographic cells):\n# A tibble: 6 × 6\n  PA         SZ                     Age   Sex       Pop  Time\n  <chr>      <chr>                  <chr> <fct>   <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 80    Males       0  2024\n2 Ang Mo Kio Ang Mo Kio Town Centre 86    Males       0  2024\n3 Ang Mo Kio Ang Mo Kio Town Centre 86    Females     0  2024\n4 Ang Mo Kio Ang Mo Kio Town Centre 88    Males       0  2024\n5 Ang Mo Kio Ang Mo Kio Town Centre 89    Males       0  2024\n6 Ang Mo Kio Ang Mo Kio Town Centre 89    Females     0  2024\n```\n\n\n:::\n:::\n\n\n\n::: callout-important\n## Zero-populations Rows Found\n\nIn below code, we will remove the zero population rows and confirm the removal of those rows in the following code.\n:::\n\n**Step 2: Removing those zero-population rows.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2. Remove all zero‐population rows\nsgdemo2024 <- sgdemo2024 %>% \n  filter(Pop > 0)\n```\n:::\n\n\n\n**Step 3: Confirm that all rows with zero-population has been removed.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 3. Confirm removal\nif (sum(sgdemo2024$Pop == 0) == 0) {\n  cat(\"✅ All zero‐population rows removed. Data is now focused on actual residents.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ All zero‐population rows removed. Data is now focused on actual residents.\n```\n\n\n:::\n:::\n\n\n\n## 2.5 Check Age Range & Filter to Plausible Values\n\n::: callout-important\n## Converting entry \"90 & Over\" in Age Column\n\nI will be converting this to a numeric value to plot my graphs. Afterwards, I will be labeling it during the plot. This is to ensure\n\n1.  **Analytics Integrity:** Internally keeping Age=90 for all labelled \"90 & Over\" which allows me to do sums, means and such.\n2.  **Visual Clarity:** On the axis or legend, the readers we see \"90+\" so there's no confusion that the final plots cover all ages above 90.\n:::\n\n**Step 1: Convert the '90 & Over' to integers.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Inspect column names to confirm they match expectations\nprint(colnames(sgdemo2024))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PA\"   \"SZ\"   \"Age\"  \"Sex\"  \"Pop\"  \"Time\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. Convert \"Age\" → numeric, mapping \"90 & Over\" → 90\nsgdemo2024 <- sgdemo2024 %>%\n  mutate(\n    Age = parse_number(as.character(Age)),  \n    Age = as.integer(Age)                   \n  )\n\n# 3. Verify the transformation\nage_stats <- sgdemo2024 %>%\n  summarise(\n    min_age = min(Age, na.rm = TRUE),\n    max_age = max(Age, na.rm = TRUE)\n  )\n\ncat(sprintf(\n  \"✅ Age conversion complete: now an integer from %d to %d.\\n\",\n  age_stats$min_age, age_stats$max_age\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ Age conversion complete: now an integer from 0 to 90.\n```\n\n\n:::\n:::\n\n\n\n**Step 2: Confirm that there are no more \"90 & Over\" entries in my data.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(sgdemo2024$Age == \"90 & Over\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n\n\n**Step 3: Confirm the column type for Age is integer.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Age column type:\", class(sgdemo2024$Age), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAge column type: integer \n```\n\n\n:::\n:::\n\n\n\n**Step 4: Ensure no NA in the column for Age.**\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nna_count <- sum(is.na(sgdemo2024$Age))\ncat(\"Number of NA in Age after parsing:\", na_count, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of NA in Age after parsing: 0 \n```\n\n\n:::\n:::\n\n\n\n## 2.6 Confirm Sex Factor Levels\n\n::: callout-important\n## Inspecting Sex Column in Data\n\nThe below code chunk will aim to ensure that there is plot consistency and reproducibility.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Count subzone‐level totals (SZ == \"Total\")\nn_sz_total <- sum(sgdemo2024$SZ == \"Total\", na.rm = TRUE)\ncat(\"Rows with SZ == \\\"Total\\\":\", n_sz_total, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with SZ == \"Total\": 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. Count any Age == NA (originally \"Total\")\nn_age_na <- sum(is.na(sgdemo2024$Age))\ncat(\"Rows with Age == NA (was \\\"Total\\\"):\", n_age_na, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with Age == NA (was \"Total\"): 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. Count any Sex == \"Total\"\nn_sex_total <- sum(as.character(sgdemo2024$Sex) == \"Total\", na.rm = TRUE)\ncat(\"Rows with Sex == \\\"Total\\\":\", n_sex_total, \"\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with Sex == \"Total\": 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. If any totals remain, peek at them\nif (n_sz_total + n_age_na + n_sex_total > 0) {\n  cat(\"⚠️ Example summary‐row(s):\\n\")\n  sgdemo2024 %>%\n    filter(\n      SZ == \"Total\" |\n      is.na(Age)    |\n      as.character(Sex) == \"Total\"\n    ) %>%\n    slice_head(n = 5) %>%\n    print()\n} else {\n  cat(\"✅ No summary‐row entries remain. You’re all set.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ No summary‐row entries remain. You’re all set.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the expected order\nexpected_levels <- c(\"Males\", \"Females\")\n\n# Inspect the current factor levels\nactual_levels <- levels(sgdemo2024$Sex)\ncat(\"Current Sex levels:\", paste(actual_levels, collapse = \", \"), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCurrent Sex levels: Males, Females \n```\n\n\n:::\n\n```{.r .cell-code}\n# Compare and act\nif (identical(actual_levels, expected_levels)) {\n  cat(\"✅ Sex factor levels are already correct (Males, Females).\\n\")\n} else {\n  warning(\"⚠️ Sex factor levels are not as expected. Resetting to Males, Females.\")\n  sgdemo2024 <- sgdemo2024 %>%\n    mutate(Sex = factor(Sex, levels = expected_levels))\n  cat(\"✅ Sex factor levels have been reset to:\", \n      paste(levels(sgdemo2024$Sex), collapse = \", \"), \"\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ Sex factor levels are already correct (Males, Females).\n```\n\n\n:::\n:::\n\n\n\n## 2.7 Checking for any 'Total' in Columns\n\n::: callout-important\n## Final Check and Summary\n\nLet's confirm that there are no values 'Total' in any of our columns so that we know our dataset is purely the granular, inhabited cells. It is not only for housekeeping, but to safeguard my visualisations and summary statistics to truly reflect Singapore's lived population in 2024.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Count subzone‐level totals (SZ == \"Total\")\nn_sz_total <- sum(sgdemo2024$SZ == \"Total\", na.rm = TRUE)\ncat(\"Rows with SZ == \\\"Total\\\":\", n_sz_total, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with SZ == \"Total\": 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. Count any Age == NA (originally \"Total\")\nn_age_na <- sum(is.na(sgdemo2024$Age))\ncat(\"Rows with Age == NA (was \\\"Total\\\"):\", n_age_na, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with Age == NA (was \"Total\"): 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. Count any Sex == \"Total\"\nn_sex_total <- sum(as.character(sgdemo2024$Sex) == \"Total\", na.rm = TRUE)\ncat(\"Rows with Sex == \\\"Total\\\":\", n_sex_total, \"\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with Sex == \"Total\": 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. If any totals remain, peek at them\nif (n_sz_total + n_age_na + n_sex_total > 0) {\n  cat(\"⚠️ Example summary‐row(s):\\n\")\n  sgdemo2024 %>%\n    filter(\n      SZ == \"Total\" |\n      is.na(Age)    |\n      as.character(Sex) == \"Total\"\n    ) %>%\n    slice_head(n = 5) %>%\n    print()\n} else {\n  cat(\"✅ No summary‐row entries remain. You’re all set.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ No summary‐row entries remain. You’re all set.\n```\n\n\n:::\n:::\n\n\n\n## 2.8 Final Summary\n\nWe are finally done with cleaning the data and converting what's needed to provide truthful and accurate data. Below is a quick summary of our freshly cleaned data!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# High‐Level Summary of Cleaned Data\n\nsummary_tbl <- sgdemo2024 %>%\n  summarise(\n    total_records    = n(),\n    total_population = sum(Pop),\n    n_PAs            = n_distinct(PA),\n    n_SZs            = n_distinct(SZ)\n  )\n\n# Print the summary table\nprint(summary_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  total_records total_population n_PAs n_SZs\n          <int>            <dbl> <int> <int>\n1         37243          4193530    42   235\n```\n\n\n:::\n\n```{.r .cell-code}\n# Confirmation message\ncat(sprintf(\n  \"✅ Data summary complete: %d records, total population %d, across %d PAs and %d subzones.\\n\",\n  summary_tbl$total_records,\n  summary_tbl$total_population,\n  summary_tbl$n_PAs,\n  summary_tbl$n_SZs\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ Data summary complete: 37243 records, total population 4193530, across 42 PAs and 235 subzones.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Show random rows\nset.seed(2025)\nsgdemo2024 %>% \n  slice_sample(prop = 0.01)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 372 × 6\n   PA            SZ                    Age Sex       Pop  Time\n   <chr>         <chr>               <int> <fct>   <dbl> <dbl>\n 1 Tampines      Tampines North         68 Males      70  2024\n 2 Toa Payoh     Boon Teck              41 Females    80  2024\n 3 Toa Payoh     Joo Seng               50 Males      60  2024\n 4 Bukit Panjang Dairy Farm             71 Males      30  2024\n 5 Ang Mo Kio    Yio Chu Kang East      56 Males      40  2024\n 6 Queenstown    Commonwealth           73 Males      30  2024\n 7 Bukit Merah   Redhill                44 Males      80  2024\n 8 Clementi      Sunset Way             68 Females    60  2024\n 9 Jurong West   Jurong West Central    10 Females   300  2024\n10 Bukit Timah   Anak Bukit             51 Males     150  2024\n# ℹ 362 more rows\n```\n\n\n:::\n:::\n\n\n\n<hr/>\n\n# Of Roots and Horizons: Singapore’s Generational Odyssey in 2024 {#article}\n\n\n\n```{=html}\n<img src=\"sgfamily.jpg\" alt=\"Alt text for accessibility\"\n     style=\"display:block; margin:0 auto; width:100%;\" />\n```\n\n\n\nIn the heart of Singapore, a quiet transformation is unfolding. Across our island, fewer children are filling playgrounds even as more elders fill community centres, a reflection of smaller birth cohorts and longer lifespans. The signs are everywhere, from merged primary schools making way for new community spaces to classrooms with dwindling enrollments. For many families, the rhythm of daily life now balances the laughter of young ones with the care of ageing parents. Neighbourhoods once bustling with young professionals now host their former residents in well‑worn flats, while newly built towns welcome bright‑eyed families beginning their Singapore story.\n\n## Generational Imbalance: Shrinking Young Cohorts and Growing Elderhood\n\n::: callout-note\n## Plot Approach\n\n[**Technical Approach**]{.underline}\n\nFor enhanced clarity, I’ve grouped the X‑axis into five‑year age bands and scaled the Y‑axis to population figures in thousands, keeping the chart readable despite its size. I have also calculated the percentages of each age group's gender by percentage of the total population to give a better understanding of the size.\n\n[**Visual Rationale**]{.underline}\n\nI also drew inspiration from an [article](https://www.datawrapper.de/blog/gendercolor) on moving beyond blue‑for‑boys and pink‑for‑girls: instead, Telegraph UK uses purple and green, echoing the UK’s “Votes for Women” campaign and offering superior contrast. By rejecting these stereotypes, we open the door to **more inclusive storytelling** and **richer understanding**, ensuring that our visual language **empowers individuals** rather than boxes them into outdated expectations. I also removed the horizontal grids to avoid the chart looking cluttered and because it does not add any value.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Prepare pyramid data with overall‐pop percentages\npyr_df <- sgdemo2024 %>%\n  mutate(\n    AgeGroup = cut(\n      Age,\n      breaks = c(-1, seq(4, 89, 5), Inf),\n      labels = c(paste0(seq(0, 85, 5), \"-\", seq(4, 89, 5)), \"90+\"),\n      right  = TRUE\n    )\n  ) %>%\n  group_by(AgeGroup, Sex) %>%\n    summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  # Calculate percentage of male/female over the total population\n  ungroup() %>%\n  mutate(\n    total_all = sum(Pop),\n    PopK      = Pop / 1000,\n    PopSignK  = if_else(Sex == \"Males\", -PopK, PopK),\n    Perc      = Pop / total_all * 100,            \n    LabelPerc = sprintf(\"%.1f%%\", Perc)\n  )\n\n# 2. Compute subtitle text with grand totals\ntotal_all     <- sum(pyr_df$Pop)\ntotal_males   <- sum(pyr_df$Pop[pyr_df$Sex == \"Males\"])\ntotal_females <- sum(pyr_df$Pop[pyr_df$Sex == \"Females\"])\npct_males     <- total_males   / total_all * 100\npct_females   <- total_females / total_all * 100\n\nsubtitle_text <- paste0(\n  \"Total population: \", scales::comma(total_all), \"\\n\",\n  \"Males: \", scales::comma(total_males), \" (\", sprintf(\"%.1f%%\", pct_males), \")  |  \",\n  \"Females: \", scales::comma(total_females), \" (\", sprintf(\"%.1f%%\", pct_females), \")\"\n)\n\nlim    <- 180\nbreaks <- seq(-lim, lim, by = 10)\n\n# 3. Plot\nggplot(pyr_df, aes(x = PopSignK, y = AgeGroup, fill = Sex)) +\n  geom_col(width = 0.8) +\n  # Male % labels \n  geom_text(\n    data    = filter(pyr_df, Sex == \"Males\"),\n    aes(label = LabelPerc),\n    hjust   = 1.1, nudge_x = -1.5,\n    size    = 3.5, color = \"black\"\n  ) +\n  # Female % labels \n  geom_text(\n    data    = filter(pyr_df, Sex == \"Females\"),\n    aes(label = LabelPerc),\n    hjust   = 0, nudge_x = 1.5,\n    size    = 3.5, color = \"black\"\n  ) +\n  scale_fill_manual(values = c(\"Males\" = \"#00C2A1\", \"Females\" = \"#9E00E3\")) +\n  scale_x_continuous(\n    breaks = breaks,\n    labels = function(x) abs(x),\n    limits = c(-lim, lim),\n    expand = c(0, 0)\n  ) +\n  geom_vline(xintercept = 0, color = \"grey50\", size = 0.3) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title    = \"Singapore Population by Age Group in 2024\",\n    subtitle = subtitle_text,\n    x        = \"Population (’000)\",\n    y        = \"Age Group\",\n    fill     = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.border       = element_rect(color = \"black\", fill = NA, size = 0.2),\n    plot.title         = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle      = element_text(size = 12, hjust = 0.5, margin = margin(b = 10)),\n    axis.text.y        = element_text(size = 11, color = \"black\"),\n    axis.text.x        = element_text(size = 11, color = \"black\"),\n    axis.title.x       = element_text(face= \"bold\"),\n    axis.title.y       = element_text(face= \"bold\"), \n    panel.grid.major.y = element_blank(),\n    panel.grid.minor   = element_blank(),\n    legend.position    = \"bottom\",\n    plot.margin        = margin(5, 40, 5, 5)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-18-1.png){width=1152}\n:::\n:::\n\n\n\nUsing Singapore’s statutory retirement age of 63 as the cutoff, shows children and adolescents (ages 0–18) making up just under 19% of residents, while those aged 64 and above account for about 26%. This leaves roughly 55% of Singaporeans in the working‑age bracket (ages 20–63), a majority tasked with supporting both younger and older dependents. This underscores growing pressures on public healthcare and social services, as well as the demands placed on the “sandwich generation” juggling childcare and eldercare.\n\nLet’s turn our attention to the prime working‑age cohort, those between 20 and 54 years olds who make up nearly half of Singapore’s population (about 49%). This group remains the engine of our economy, with the largest concentrations clustered in the 30–44 bands, reflecting a strong mid‑career presence. Yet their growth has begun to plateau, a sign that fresh labour supply won’t keep expanding at the same pace. As this segment shoulders the financial weight of both children and older relatives, policymakers must look beyond merely filling jobs such as investing instead in skills development, flexible work arrangements and productivity enhancements to sustain economic momentum even as the pool of prime‑age workers levels off.\n\n## Balancing Act: Singapore’s Workforce Dynamics and Regional Age Hotspots\n\n::: callout-note\n## Plot Approach\n\n[**Technical Approach**]{.underline}\n\nUsing the patchwork package, I assembled a composite figure that combines our national dependency‑cohort bar chart with a regional age‑by‑region heatmap. First, I mapped each Planning Area to its broader region (per the government’s official classification [here](https://www.newlaunchesreview.com/regions-of-singapore/)), which allowed me to group and districts. With those region labels in place, I plotted the heatmap to visualise age‑group concentrations across the island. Defining regions upfront not only streamlined the heatmap’s construction but also sets us up for cleaner, more flexible plotting in subsequent analyses.\n\n[**Visual Rationale**]{.underline}\n\nBuilding on the insights from our population pyramid, I wanted to drill down further **granularity** into the so‑called “Sandwich Generation,” whose members juggle childcare and eldercare. The dependency‑cohort chart quantifies exactly how many young and elderly dependents each 20–64 age bracket supports. I removed the grids for a clean look as I only have 3 categories and labels are clear. The main focus are the bar lengths to and adding grid-lines would draw attention away from an already simple bar graph. Recalling Lesson 2: Practical Guides for Using Colour in Charts, I’ve kept the dependency‑cohort bars in the same soft colour palette to maintain visual harmony and avoid overloading the viewer.\n\nThe regional heatmap reveals where those age groups cluster regionally. Together, these visuals highlight both the scale of intergenerational care pressures and the specific districts where urban planners and policymakers must prioritise childcare facilities, eldercare services, and family‑friendly infrastructure.\n:::\n\n\n\n::: {.cell fig-responsive='true'}\n\n```{.r .cell-code}\n# Define PA → Region lookup\ncentral    <- c(\"Bishan\",\"Bukit Merah\",\"Bukit Timah\",\"Downtown Core\",\"Geylang\",\n                \"Kallang\",\"Marina East\",\"Marina South\",\"Marine Parade\",\"Museum\",\n                \"Newton\",\"Novena\",\"Orchard\",\"Outram\",\"Queenstown\",\"River Valley\",\n                \"Rochor\",\"Singapore River\",\"Southern Islands\",\"Straits View\",\n                \"Tanglin\",\"Toa Payoh\")\neast       <- c(\"Bedok\",\"Changi\",\"Changi Bay\",\"Pasir Ris\",\"Paya Lebar\",\"Tampines\")\nnorth      <- c(\"Central Water Catchment\",\"Lim Chu Kang\",\"Mandai\",\"Sembawang\",\n                \"Simpang\",\"Sungei Kadut\",\"Woodlands\",\"Yishun\")\nnorth_east <- c(\"Ang Mo Kio\",\"Hougang\",\"North-Eastern Islands\",\"Punggol\",\n                \"Seletar\",\"Sengkang\",\"Serangoon\")\nwest       <- c(\"Boon Lay\",\"Bukit Batok\",\"Bukit Panjang\",\"Choa Chu Kang\",\n                \"Clementi\",\"Jurong East\",\"Jurong West\",\"Pioneer\",\"Tengah\",\n                \"Tuas\",\"Western Islands\",\"Western Water Catchment\")\n\n# 1. Cohort bar data & plot\ncohort_df <- sgdemo2024 %>%\n  mutate(\n    CohortKey = case_when(\n      Age <= 19 ~ \"young\",\n      Age >= 65 ~ \"elderly\",\n      TRUE      ~ \"labour\"\n    )\n  ) %>%\n  group_by(CohortKey) %>%\n    summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  mutate(\n    TotalK    = TotalPop/1000,\n    Perc      = TotalPop/sum(TotalPop)*100,\n    LabelFull = paste0(sprintf(\"%.1f%%\", Perc), \"\\n(\", comma(TotalPop),\")\"),\n    CohortLabel = case_when(\n      CohortKey==\"young\"   ~ \"**Young Dependents**<br>Age: 0–19\",\n      CohortKey==\"labour\"  ~ \"**Labour Force**<br>Age: 20–64\",\n      CohortKey==\"elderly\" ~ \"**Elderly Dependents**<br>Age: 65+\"\n    ) %>%\n      factor(levels=c(\n        \"**Young Dependents**<br>Age: 0–19\",\n        \"**Labour Force**<br>Age: 20–64\",\n        \"**Elderly Dependents**<br>Age: 65+\"\n      ))\n  )\n\ngrand_total <- sum(cohort_df$TotalPop)\nmax_k       <- 3000\nnudge_amt   <- max_k * 0.02\n\np_cohort <- ggplot(cohort_df, aes(TotalK, CohortLabel)) +\n  geom_col(fill=\"#ACE1AF\", width=0.6) +\n  geom_text(aes(label=LabelFull),\n            hjust=0, nudge_x=nudge_amt, size=5,\n            lineheight=0.9, color=\"black\") +\n  scale_x_continuous(\n    name=\"Population (’000)\",\n    breaks=seq(0,max_k,250),\n    limits=c(0,max_k),\n    expand=expansion(mult=c(0,0.05)),\n    labels=function(x)x\n  ) +\n  labs(\n    title    = \"Singapore Population by Dependency Category in 2024\",\n    subtitle = paste0(\"Total population: \", comma(grand_total)),\n    x        = NULL, y = NULL\n  ) +\n  theme_minimal(base_size=14) +\n  theme(\n    plot.title        = element_text(size=16, face=\"bold\", hjust=0.5),\n    plot.subtitle     = element_text(size=12, hjust=0.5, margin=margin(b=10)),\n    axis.text.y       = element_markdown(size=12, color=\"black\"),\n    axis.text.x       = element_text(size=12, color=\"black\"),\n    axis.title.x       = element_text(face= \"bold\"),\n    panel.grid        = element_blank(),\n    legend.position   = \"none\"\n  )\n\n# 2. Heatmap data & plot \ntile_df <- sgdemo2024 %>%\n  mutate(\n    Region = case_when(\n      PA %in% central    ~ \"Central\",\n      PA %in% east       ~ \"East\",\n      PA %in% north      ~ \"North\",\n      PA %in% north_east ~ \"North-East\",\n      PA %in% west       ~ \"West\"\n    ),\n    AgeBand = cut(\n      Age,\n      breaks = c(seq(0,90,5), Inf),\n      right  = FALSE,\n      labels = c(paste0(seq(0,85,5), \"-\", seq(4,89,5)), \"90+\")\n    )\n  ) %>%\n  group_by(Region, AgeBand) %>%\n    summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  mutate(\n    Region  = factor(Region, levels=c(\"Central\",\"East\",\"North\",\"North-East\",\"West\")),\n    AgeBand = factor(AgeBand, levels=c(paste0(seq(0,85,5), \"-\", seq(4,89,5)), \"90+\"))\n  )\n\np_heat <- ggplot(tile_df, aes(Region, AgeBand, fill=Pop)) +\n  geom_tile(color=\"white\") +\n  scale_fill_viridis_c(name=\"Population\", option=\"C\", labels=comma) +\n  labs(title = \"Singapore Heatmap of Age Population by Region in 2024\") +\n  theme_minimal(base_size=14) +\n  theme(\n    plot.title       = element_text(size=16, face=\"bold\", hjust=0.5),\n    axis.text.x      = element_text(color=\"black\"),\n    axis.text.y      = element_text(color=\"black\"),\n    axis.title.x     = element_blank(),\n    axis.title.y     = element_blank(),\n    panel.grid       = element_blank(),\n    legend.position  = \"right\",\n    legend.justification = \"center\"\n  )\n\n# 3. Stack cohort on top, heatmap below\np_cohort / p_heat +\n  plot_layout(heights=c(1,1))\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=1152}\n:::\n:::\n\n\n\nCaught between caring for aging parents and raising children, Singapore’s “sandwich generation” faces mounting pressure as 37 dependents fall on every 100 working‑age adults. With 63.1% of residents aged 20–64, these mid‑career adults must support 18.9% young dependents (ages 0–19) and 18.0% elderly dependents (65+), straining both family resources and national social services.\n\nOur regional heatmap further reveals where this tension is most acute: the Central and North‑East districts not only concentrate the largest cohorts of prime‑age workers (35–44) but also show darker shades in the early senior bands (65–74), indicating dual hotspots of childcare and eldercare demand. In contrast, the North region’s lighter tones across all age bands point to relatively lower service needs there. Addressing the sandwich generation’s unique challenges will require integrated policies by expanding affordable childcare in family‑dense precincts, scaling up eldercare support in senior‑heavy districts, and fostering workplace flexibility to ensure that today’s caregivers are themselves cared for.\n\n## Generational Midpoints by Planning Area: Visualising Median Ages\n\n::: callout-note\n## Plot Approach\n\n[**Technical Approach**]{.underline}\n\nBuilding on our earlier maps and cohort charts, I began by calculating the median age for each Planning Area, split by sex. I then reshaped the results into a “wide” format so each area has two columns, one for female median age and one for male, and ordered the Planning Areas by their overall median (average of the two sexes).\n\n[**Visual Rationale**]{.underline}\n\nThis dumbbell plot naturally extends our story from a national dependency load and regional heatmap to the local “midpoints” of each community. By placing female and male medians side by side, we immediately see both overall age trends and sex‑specific gaps: established estates cluster toward the upper end of the age scale, while newer towns remain lower. The consistent purple‑and‑green palette ties back to our earlier rationale in population pyramid. Both horizontal and veritcal grids are added to guide users to link Planning Areas and Median Age. However, it has been kept soft enough to not clutter the plot, especially since the dumbell itself has a line in between the male and female. Ultimately, this chart highlights where generational midpoints and by extension, community needs vary most sharply between men and women, guiding targeted policy and infrastructure decisions at the Planning Area level.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Compute weighted median age by PA & sex\nmed_age <- sgdemo2024 %>%\n  group_by(PA, Sex) %>%\n  summarise(\n    MedAge = matrixStats::weightedMedian(Age, w = Pop),\n    .groups = \"drop\"\n  ) %>%\n  pivot_wider(\n    names_from  = Sex,\n    values_from = MedAge\n  ) %>%\n  rename(Male = Males, Female = Females) %>%\n  arrange((Male + Female) / 2) %>%\n  mutate(PA = factor(PA, levels = PA))\n\n# 2. Plot static dumbbell-like chart with legend on the right\nggplot(med_age, aes(y = PA)) +\n  # a) connecting lines\n  geom_segment(aes(x = Male, xend = Female, yend = PA),\n               color = \"black\", size = 0.5) +\n  # b) male points\n  geom_point(aes(x = Male, color = \"Male\"), size = 4) +\n  # c) female points\n  geom_point(aes(x = Female, color = \"Female\"), size = 4) +\n  # 3. Scale and legend\n  scale_color_manual(\n    values = c(\"Male\" = \"#00C2A1\", \"Female\" = \"#9E00E3\")\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 55, by = 5),\n    labels = seq(0, 55, by = 5),\n    limits = c(0, 55),\n    expand = c(0, 0)\n  ) +\n  labs(\n    title = \"Singapore Median Age by Sex and Planning Area in 2024\",\n    x     = \"Median Age (years)\",\n    y     = NULL,\n    color = NULL\n  ) +\n  theme_classic(base_size = 14) +\n  theme(\n    plot.title           = element_text(hjust = 0.5, face = \"bold\"),\n    axis.text.x          = element_text(color = \"black\", size = 11),\n    axis.title.x         = element_text(size = 14),\n    axis.text.y          = element_text(color = \"black\", size = 11),\n    panel.grid.major.x   = element_line(color = \"grey90\", size = 0.2),\n    panel.grid.minor.x   = element_line(color = \"grey90\", size = 0.2),\n    panel.grid.major.y   = element_line(color = \"grey90\", size = 0.2),\n    panel.grid.minor.y   = element_line(color = \"grey90\", size = 0.2),\n    legend.position      = \"bottom\",\n    legend.justification = \"top\",\n    legend.text          = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-20-1.png){width=1152}\n:::\n:::\n\n\n\nBuilding on our dependency‑cohort and regional heatmap analyses, examining the median age across Singapore’s Planning Areas reveals where communities skew younger or older at their cores. Older estates such as Queenstown and Bukit Merah register median ages in the mid 40s, reflecting long‑established neighbourhoods and a higher share of empty‑nesters. In contrast, newer towns like Punggol, Sengkang and Tengah show median ages in the low 30s, driven by young families and recent housing launches. Heartland hubs such as Jurong East and Tampines sit in between, with medians around 36–38 years, capturing both working professionals and a growing elder segment. These median‑age patterns not only mirror the “Sandwich Generation” pressures we identified where mid‑career adults balance dependents on either side of the age spectrum, but also pinpoint where planners must tailor services: youth‑oriented amenities in family‑heavy districts and age‑friendly infrastructure in more mature estates.\n\n## Final Words - Bridging Generations: Tailoring Singapore's Communities for All Ages\n\nTogether, our analysis paints a comprehensive portrait of Singapore’s evolving demographic landscape: declining birth rates have narrowed the population’s base while increased longevity has expanded its apex, leaving 37 dependents, 20 young and 17 elderly for every 100 working‑age adults. Regionally, Central and North‑East districts emerge as dual hotspots of both prime‑age workers and burgeoning senior cohorts, intensifying the “sandwich generation” pressures on mid‑career adults who juggle childcare and eldercare. Across Planning Areas, median ages range from the low 30s in growth towns like Punggol and Tengah to the mid‑40s in mature estates such as Queenstown and Bukit Merah, with notable sex‑specific gaps highlighted in our dumbbell plot. These patterns underscore the urgency of place‑based strategies by expanding affordable childcare in youthful precincts, scaling up geriatric care in senior‑dense districts, and tailoring urban infrastructure to each community’s generational midpoint. By aligning services with these demographic realities, Singapore can ensure that every cohort, young, working‑age and elderly receives the support it needs for a resilient, inclusive future.\n",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}