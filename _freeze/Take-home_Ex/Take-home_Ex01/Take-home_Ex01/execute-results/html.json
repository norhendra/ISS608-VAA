{
  "hash": "e99da8eb671d90967a044fe9bbddcb19",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Take Home Assignment 1\"\nauthor: \"Nor Hendra\"\ndate: \"30 April 2025\"\ndate-modified: \"last-modified\"\nformat: html\neditor: visual\nfreeze: true\nexecute:\n  eval: true\n  echo: true\n  warning: false\n---\n\n\n\n# Singapore's 2024 Demographic Landscape: A Closer Look at Age, Gender and Geographic Distribution\n# 1. Background\n\n\n\n# i. Importing Packages\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\npacman::p_load(tidyverse, ggthemes,viridis,ggridges,ggrepel,patchwork, readr, dplyr, forcats, scales, ggtext, matrixStats)\n```\n:::\n\n\n\n# ii. Importing Data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 3.1 Import\nsgdemo2024 <- read_csv((\"data/respopagesex2024.csv\"), show_col_types = FALSE)\n```\n:::\n\n\n\n## 2.1 Quick check of data\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nglimpse(sgdemo2024)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 60,424\nColumns: 6\n$ PA   <chr> \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo Kio\", \"Ang Mo K…\n$ SZ   <chr> \"Ang Mo Kio Town Centre\", \"Ang Mo Kio Town Centre\", \"Ang Mo Kio T…\n$ Age  <chr> \"0\", \"0\", \"1\", \"1\", \"2\", \"2\", \"3\", \"3\", \"4\", \"4\", \"5\", \"5\", \"6\", …\n$ Sex  <chr> \"Males\", \"Females\", \"Males\", \"Females\", \"Males\", \"Females\", \"Male…\n$ Pop  <dbl> 10, 10, 10, 10, 10, 10, 10, 10, 30, 10, 20, 10, 20, 30, 30, 10, 3…\n$ Time <dbl> 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024, 2024,…\n```\n\n\n:::\n:::\n\n\n\n# 3 Data Cleaning and Quality Checks\n\n## 3.1 Converting Sex to a factor with the correct order\n\nBy coercing Sex into a factor with a known level order to give full, explicit control over how it's displayed in every plot and keeps the downstream code faster and more robust.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsgdemo2024 <- sgdemo2024 %>%\n  mutate(\n    Sex = factor(Sex, levels = c(\"Males\", \"Females\"))\n  )\n```\n:::\n\n\n\n## 3.1 Count missing values by column\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 4.1 Check for missing values and confirm none\nmissing_counts <- sgdemo2024 %>% \n  summarise_all(~ sum(is.na(.)))\n\nif (all(unlist(missing_counts) == 0)) {\n  cat(\"✅ No missing values, proceed to the next check\\n\")\n} else {\n  warning(\"⚠️ Missing values detected:\")\n  print(missing_counts)\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ No missing values, proceed to the next check\n```\n\n\n:::\n:::\n\n\n\n## 3.2 Checking for any duplicates\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndup_count <- sum(duplicated(sgdemo2024))\n\nif (dup_count == 0) {\n  cat(\"✅ No duplicates, on to the next!\\n\")\n} else {\n  warning(\"⚠️ Found duplicate rows:\")\n  print(sgdemo2024[duplicated(sgdemo2024), ])\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ No duplicates, on to the next!\n```\n\n\n:::\n:::\n\n\n\n## 3.3 Ensure population is strictly positive\n\n::: callout-important\n## Why we have to remove zero population rows\n\nScrolling through the data, I found zero-population rows which simply means that no one of that age and sex lives in that subzone. If we add these to the plot, it will\n\n1.  Add unnecessary clutter of showing up thousands of empty bars or tiles that distract from where people actually live. More importantly,\n\n<!-- -->\n\n2.  It obscures the story I am trying to tell - the audience cares about real population, not the zero-density grid.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Check for zero-population rows\nzero_rows <- sgdemo2024 %>% \n  filter(Pop == 0)\n\nif (nrow(zero_rows) > 0) {\n  cat(\"⚠️ Found\", nrow(zero_rows), \"rows with Pop == 0 (empty demographic cells):\\n\")\n  print(head(zero_rows))    # show a few examples\n} else {\n  cat(\"✅ No zero‐population rows found.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n⚠️ Found 23181 rows with Pop == 0 (empty demographic cells):\n# A tibble: 6 × 6\n  PA         SZ                     Age   Sex       Pop  Time\n  <chr>      <chr>                  <chr> <fct>   <dbl> <dbl>\n1 Ang Mo Kio Ang Mo Kio Town Centre 80    Males       0  2024\n2 Ang Mo Kio Ang Mo Kio Town Centre 86    Males       0  2024\n3 Ang Mo Kio Ang Mo Kio Town Centre 86    Females     0  2024\n4 Ang Mo Kio Ang Mo Kio Town Centre 88    Males       0  2024\n5 Ang Mo Kio Ang Mo Kio Town Centre 89    Males       0  2024\n6 Ang Mo Kio Ang Mo Kio Town Centre 89    Females     0  2024\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2. Remove all zero‐population rows\nsgdemo2024 <- sgdemo2024 %>% \n  filter(Pop > 0)\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 3. Confirm removal\nif (sum(sgdemo2024$Pop == 0) == 0) {\n  cat(\"✅ All zero‐population rows removed. Data is now focused on actual residents.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ All zero‐population rows removed. Data is now focused on actual residents.\n```\n\n\n:::\n:::\n\n\n\n## 3.4 Check Age Range & Filter to Plausible Values\n\n::: callout-important\n## Converting entry \"90 & Over\" in Age Column\n\nI will be converting this to a numeric value to plot my graphs. Afterwards, I will be labeling it during the plot. This is to ensure\n\n1.  **Analytics Integrity:** Internally keeping Age=90 for all labelled \"90 & Over\" which allows me to do sums, means and such.\n2.  **Visual Clarity:** On the axis or legend, the readers we see \"90+\" so there's no confusion that the final bar or ridge covers all ages above 90.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Inspect column names to confirm they match expectations\nprint(colnames(sgdemo2024))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] \"PA\"   \"SZ\"   \"Age\"  \"Sex\"  \"Pop\"  \"Time\"\n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. Convert \"Age\" → numeric, mapping \"90 & Over\" → 90\nsgdemo2024 <- sgdemo2024 %>%\n  mutate(\n    Age = parse_number(as.character(Age)),  \n    Age = as.integer(Age)                   \n  )\n\n# 3. Verify the transformation\nage_stats <- sgdemo2024 %>%\n  summarise(\n    min_age = min(Age, na.rm = TRUE),\n    max_age = max(Age, na.rm = TRUE)\n  )\n\ncat(sprintf(\n  \"✅ Age conversion complete: now an integer from %d to %d.\\n\",\n  age_stats$min_age, age_stats$max_age\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ Age conversion complete: now an integer from 0 to 90.\n```\n\n\n:::\n:::\n\n\n\nFinal confirmation there are no more \"90 & Over\" entries in my data and Age column converted into integer.\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nsum(sgdemo2024$Age == \"90 & Over\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n[1] 0\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncat(\"Age column type:\", class(sgdemo2024$Age), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAge column type: integer \n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\nna_count <- sum(is.na(sgdemo2024$Age))\ncat(\"Number of NA in Age after parsing:\", na_count, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nNumber of NA in Age after parsing: 0 \n```\n\n\n:::\n:::\n\n\n\n## 3.5 Confirm Sex Factor Levels\n\n::: callout-important\n## Inspecting Sex column in data\n\nThe below code chunk will aim to ensure that there is plot consistency and reproducibility.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Count subzone‐level totals (SZ == \"Total\")\nn_sz_total <- sum(sgdemo2024$SZ == \"Total\", na.rm = TRUE)\ncat(\"Rows with SZ == \\\"Total\\\":\", n_sz_total, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with SZ == \"Total\": 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. Count any Age == NA (originally \"Total\")\nn_age_na <- sum(is.na(sgdemo2024$Age))\ncat(\"Rows with Age == NA (was \\\"Total\\\"):\", n_age_na, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with Age == NA (was \"Total\"): 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. Count any Sex == \"Total\"\nn_sex_total <- sum(as.character(sgdemo2024$Sex) == \"Total\", na.rm = TRUE)\ncat(\"Rows with Sex == \\\"Total\\\":\", n_sex_total, \"\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with Sex == \"Total\": 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. If any totals remain, peek at them\nif (n_sz_total + n_age_na + n_sex_total > 0) {\n  cat(\"⚠️ Example summary‐row(s):\\n\")\n  sgdemo2024 %>%\n    filter(\n      SZ == \"Total\" |\n      is.na(Age)    |\n      as.character(Sex) == \"Total\"\n    ) %>%\n    slice_head(n = 5) %>%\n    print()\n} else {\n  cat(\"✅ No summary‐row entries remain. You’re all set.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ No summary‐row entries remain. You’re all set.\n```\n\n\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Define the expected order\nexpected_levels <- c(\"Males\", \"Females\")\n\n# Inspect the current factor levels\nactual_levels <- levels(sgdemo2024$Sex)\ncat(\"Current Sex levels:\", paste(actual_levels, collapse = \", \"), \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nCurrent Sex levels: Males, Females \n```\n\n\n:::\n\n```{.r .cell-code}\n# Compare and act\nif (identical(actual_levels, expected_levels)) {\n  cat(\"✅ Sex factor levels are already correct (Males, Females).\\n\")\n} else {\n  warning(\"⚠️ Sex factor levels are not as expected. Resetting to Males, Females.\")\n  sgdemo2024 <- sgdemo2024 %>%\n    mutate(Sex = factor(Sex, levels = expected_levels))\n  cat(\"✅ Sex factor levels have been reset to:\", \n      paste(levels(sgdemo2024$Sex), collapse = \", \"), \"\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ Sex factor levels are already correct (Males, Females).\n```\n\n\n:::\n:::\n\n\n\n## 3.5 Checking for any 'Total' in Columns\n\n::: callout-important\n## Final check and summary\n\nLet's confirm that there are no values 'Total' in any of our columns so that we know our dataset is purely the granular, inhabited cells. It is not only for housekeeping, but to safeguard my visualisations and summary statistics to truly reflect Singapore's lived population in 2024.\n:::\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Count subzone‐level totals (SZ == \"Total\")\nn_sz_total <- sum(sgdemo2024$SZ == \"Total\", na.rm = TRUE)\ncat(\"Rows with SZ == \\\"Total\\\":\", n_sz_total, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with SZ == \"Total\": 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 2. Count any Age == NA (originally \"Total\")\nn_age_na <- sum(is.na(sgdemo2024$Age))\ncat(\"Rows with Age == NA (was \\\"Total\\\"):\", n_age_na, \"\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with Age == NA (was \"Total\"): 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 3. Count any Sex == \"Total\"\nn_sex_total <- sum(as.character(sgdemo2024$Sex) == \"Total\", na.rm = TRUE)\ncat(\"Rows with Sex == \\\"Total\\\":\", n_sex_total, \"\\n\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows with Sex == \"Total\": 0 \n```\n\n\n:::\n\n```{.r .cell-code}\n# 4. If any totals remain, peek at them\nif (n_sz_total + n_age_na + n_sex_total > 0) {\n  cat(\"⚠️ Example summary‐row(s):\\n\")\n  sgdemo2024 %>%\n    filter(\n      SZ == \"Total\" |\n      is.na(Age)    |\n      as.character(Sex) == \"Total\"\n    ) %>%\n    slice_head(n = 5) %>%\n    print()\n} else {\n  cat(\"✅ No summary‐row entries remain. You’re all set.\\n\")\n}\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ No summary‐row entries remain. You’re all set.\n```\n\n\n:::\n:::\n\n\n\n## 3.6 Final Summary\n\nWe are finally done with cleaning the data and converting what's needed to provide truthful and accurate data. Below is a quick summary of our freshly cleaned data!\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# High‐Level Summary of Cleaned Data\n\nsummary_tbl <- sgdemo2024 %>%\n  summarise(\n    total_records    = n(),\n    total_population = sum(Pop),\n    n_PAs            = n_distinct(PA),\n    n_SZs            = n_distinct(SZ)\n  )\n\n# Print the summary table\nprint(summary_tbl)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 1 × 4\n  total_records total_population n_PAs n_SZs\n          <int>            <dbl> <int> <int>\n1         37243          4193530    42   235\n```\n\n\n:::\n\n```{.r .cell-code}\n# Confirmation message\ncat(sprintf(\n  \"✅ Data summary complete: %d records, total population %d, across %d PAs and %d subzones.\\n\",\n  summary_tbl$total_records,\n  summary_tbl$total_population,\n  summary_tbl$n_PAs,\n  summary_tbl$n_SZs\n))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n✅ Data summary complete: 37243 records, total population 4193530, across 42 PAs and 235 subzones.\n```\n\n\n:::\n\n```{.r .cell-code}\n# Show random rows\nset.seed(2025)\nsgdemo2024 %>% \n  slice_sample(prop = 0.01)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n# A tibble: 372 × 6\n   PA            SZ                    Age Sex       Pop  Time\n   <chr>         <chr>               <int> <fct>   <dbl> <dbl>\n 1 Tampines      Tampines North         68 Males      70  2024\n 2 Toa Payoh     Boon Teck              41 Females    80  2024\n 3 Toa Payoh     Joo Seng               50 Males      60  2024\n 4 Bukit Panjang Dairy Farm             71 Males      30  2024\n 5 Ang Mo Kio    Yio Chu Kang East      56 Males      40  2024\n 6 Queenstown    Commonwealth           73 Males      30  2024\n 7 Bukit Merah   Redhill                44 Males      80  2024\n 8 Clementi      Sunset Way             68 Females    60  2024\n 9 Jurong West   Jurong West Central    10 Females   300  2024\n10 Bukit Timah   Anak Bukit             51 Males     150  2024\n# ℹ 362 more rows\n```\n\n\n:::\n:::\n\n\n\n# 4 Population Pyramid\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Prepare pyramid data with percentages\npyr_df <- sgdemo2024 %>%\n  mutate(\n    AgeGroup = cut(\n      Age,\n      breaks = c(-1, seq(4, 89, 5), Inf),\n      labels = c(paste0(seq(0, 85, 5), \"-\", seq(4, 89, 5)), \"90+\"),\n      right  = TRUE\n    )\n  ) %>%\n  group_by(AgeGroup, Sex) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  group_by(Sex) %>%\n  mutate(\n    SexTotal   = sum(Pop),\n    Perc       = Pop / SexTotal * 100,\n    LabelPerc  = sprintf(\"%.1f%%\", Perc),\n    PopK       = Pop / 1000,\n    PopSignK   = if_else(Sex == \"Males\", -PopK, PopK)\n  ) %>%\n  ungroup()\n\n# 2. Compute subtitle text with grand totals and percentages\ntotal_all     <- sum(pyr_df$Pop)\ntotal_males   <- sum(pyr_df$Pop[pyr_df$Sex == \"Males\"])\ntotal_females <- sum(pyr_df$Pop[pyr_df$Sex == \"Females\"])\npct_males     <- total_males   / total_all * 100\npct_females   <- total_females / total_all * 100\n\nsubtitle_text <- paste0(\n  \"Total population: \", scales::comma(total_all), \"\\n\",\n  \"Males: \", scales::comma(total_males), \" (\", sprintf(\"%.1f%%\", pct_males), \")  |  \",\n  \"Females: \", scales::comma(total_females), \" (\", sprintf(\"%.1f%%\", pct_females), \")\"\n)\n\n# 3. Fixed axis limits\nlim    <- 180\nbreaks <- seq(-lim, lim, by = 10)\n\n# 4. Plot\nggplot(pyr_df, aes(x = PopSignK, y = AgeGroup, fill = Sex)) +\n  geom_col(width = 0.8) +\n  # Male % labels\n  geom_text(\n    data    = filter(pyr_df, Sex == \"Males\"),\n    aes(label = LabelPerc),\n    hjust   = 1.1, nudge_x = -1.5,\n    size    = 3.5, color = \"black\"\n  ) +\n  # Female % labels\n  geom_text(\n    data    = filter(pyr_df, Sex == \"Females\"),\n    aes(label = LabelPerc),\n    hjust   = 0, nudge_x = 1.5,\n    size    = 3.5, color = \"black\"\n  ) +\n  scale_fill_manual(values = c(\"Males\" = \"#00C2A1\", \"Females\" = \"#9E00E3\")) +\n  scale_x_continuous(\n    breaks = breaks,\n    labels = function(x) abs(x),\n    limits = c(-lim, lim),\n    expand = c(0, 0)\n  ) +\n  geom_vline(xintercept = 0, color = \"grey50\", size = 0.3) +\n  coord_cartesian(clip = \"off\") +\n  labs(\n    title    = \"Singapore Population by Age Group, 2024\",\n    subtitle = subtitle_text,\n    x        = \"Population (’000)\",\n    y        = \"Age Group\",\n    fill     = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.border       = element_rect(color = \"black\", fill = NA, size = 0.2),\n    plot.title         = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle      = element_text(size = 12, hjust = 0.5, margin = margin(b = 10)),\n    axis.text.y        = element_text(size = 10, color = \"black\"),\n    axis.text.x        = element_text(size = 10, color = \"black\"),\n    panel.grid.major.y = element_blank(),\n    panel.grid.minor   = element_blank(),\n    legend.position    = \"bottom\",\n    plot.margin        = margin(5, 40, 5, 5)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-18-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\ncohort_df <- sgdemo2024 %>%\n  mutate(\n    CohortKey = case_when(\n      Age <= 19            ~ \"young\",\n      Age >= 65            ~ \"elderly\",\n      TRUE                 ~ \"labour\"\n    )\n  ) %>%\n  group_by(CohortKey) %>%\n  summarise(TotalPop = sum(Pop), .groups = \"drop\") %>%\n  mutate(\n    TotalK    = TotalPop / 1000,\n    Perc      = TotalPop / sum(TotalPop) * 100,\n    LabelFull = paste0(\n      sprintf(\"%.1f%%\", Perc),\n      \"\\n(\",\n      scales::comma(TotalPop),\n      \")\"\n    ),\n    CohortLabel = case_when(\n      CohortKey == \"young\"   ~ \"**Young Dependents**<br>Age: 0 to 19\",\n      CohortKey == \"labour\"  ~ \"**Labour Force**<br>Age: 20 to 64\",\n      CohortKey == \"elderly\" ~ \"**Elderly Dependents**<br>Age: 65+\"\n    ) %>%\n      factor(levels = c(\n        \"**Young Dependents**<br>Age: 0 to 19\",\n        \"**Labour Force**<br>Age: 20 to 64\",\n        \"**Elderly Dependents**<br>Age: 65+\"\n      ))\n  )\n\n# Computing grand total\ngrand_total <- sum(cohort_df$TotalPop)\n\n# Adjust the x-axis limit so that values don't get cut off\nmax_k     <- 3000\nnudge_amt <- max_k * 0.02  \n\n# Removing grid for minimalist approach\nggplot(cohort_df, aes(x = TotalK, y = CohortLabel)) +\n  geom_col(fill = \"#ACE1AF\", width = 0.6) +\n  geom_text(aes(label = LabelFull),\n            hjust      = 0,\n            nudge_x    = nudge_amt,\n            size       = 5,\n            lineheight = 0.9,\n            color      = \"black\") +\n  scale_x_continuous(\n    name   = \"Population (’000)\",\n    breaks = seq(0, max_k, by = 250),\n    limits = c(0, max_k),\n    expand = expansion(mult = c(0, 0.05)),\n    labels = function(x) x\n  ) +\n  labs(\n    title    = \"Population by Dependency Category, Singapore 2024\",\n    subtitle = paste0(\"Total population: \", scales::comma(grand_total)),\n    x        = NULL,\n    y        = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    axis.text.y      = element_markdown(size = 12, color = \"black\"),\n    axis.text.x      = element_text(size = 12, color = \"black\"),\n    plot.title       = element_text(size = 18, face = \"bold\", hjust = 0.5),\n    plot.subtitle    = element_text(size = 12, hjust = 0.5, margin = margin(b = 10)),\n    legend.position  = \"none\",\n    plot.margin      = margin(10, 40, 10, 10)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-19-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Define PA → Region lookup lists\ncentral    <- c(\"Bishan\",\"Bukit Merah\",\"Bukit Timah\",\"Downtown Core\",\"Geylang\",\n                \"Kallang\",\"Marina East\",\"Marina South\",\"Marine Parade\",\"Museum\",\n                \"Newton\",\"Novena\",\"Orchard\",\"Outram\",\"Queenstown\",\"River Valley\",\n                \"Rochor\",\"Singapore River\",\"Southern Islands\",\"Straits View\",\n                \"Tanglin\",\"Toa Payoh\")\neast       <- c(\"Bedok\",\"Changi\",\"Changi Bay\",\"Pasir Ris\",\"Paya Lebar\",\"Tampines\")\nnorth      <- c(\"Central Water Catchment\",\"Lim Chu Kang\",\"Mandai\",\"Sembawang\",\n                \"Simpang\",\"Sungei Kadut\",\"Woodlands\",\"Yishun\")\nnorth_east <- c(\"Ang Mo Kio\",\"Hougang\",\"North-Eastern Islands\",\"Punggol\",\n                \"Seletar\",\"Sengkang\",\"Serangoon\")\nwest       <- c(\"Boon Lay\",\"Bukit Batok\",\"Bukit Panjang\",\"Choa Chu Kang\",\n                \"Clementi\",\"Jurong East\",\"Jurong West\",\"Pioneer\",\"Tengah\",\n                \"Tuas\",\"Western Islands\",\"Western Water Catchment\")\n\n# 2. Build heatmap data\ntile_df <- sgdemo2024 %>%\n  mutate(\n    Region = case_when(\n      PA %in% central    ~ \"Central\",\n      PA %in% east       ~ \"East\",\n      PA %in% north      ~ \"North\",\n      PA %in% north_east ~ \"North-East\",\n      PA %in% west       ~ \"West\",\n      TRUE               ~ NA_character_\n    )\n  ) %>%\n  filter(!is.na(Region)) %>%\n  mutate(\n    AgeBand = cut(\n      Age,\n      breaks = c(seq(0, 90, by = 5), Inf),\n      right  = FALSE,\n      labels = c(paste0(seq(0,85,5), \"-\", seq(4,89,5)), \"90+\")\n    )\n  ) %>%\n  group_by(Region, AgeBand) %>%\n  summarise(Pop = sum(Pop), .groups = \"drop\") %>%\n  mutate(\n    Region  = factor(Region, levels = c(\"Central\",\"East\",\"North\",\"North-East\",\"West\")),\n    AgeBand = factor(AgeBand, levels = c(paste0(seq(0,85,5), \"-\", seq(4,89,5)), \"90+\"))\n  )\n\n# 3. Plot\nggplot(tile_df, aes(x = Region, y = AgeBand, fill = Pop)) +\n  geom_tile(color = \"white\") +\n  scale_fill_viridis_c(name = \"Population\", option = \"C\", labels = comma) +\n  labs(\n    title = \"Heatmap of Age Population by Region, Singapore 2024\",\n    x     = \"Region\",\n    y     = \"Age Band\"\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    axis.text.x      = element_text(face=\"bold\", size = 12, color = \"black\"),\n    axis.text.y      = element_text(size = 14, color = \"black\"),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank(),\n    legend.position  = \"right\",\n    plot.title       = element_text(size = 16, face=\"bold\", hjust = 0.5),\n    axis.ticks       = element_blank(),\n    panel.border     = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-20-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 2. Assign each PA to its region (only the five defined)\nridge_region <- sgdemo2024 %>%\n  mutate(\n    Region = case_when(\n      PA %in% central    ~ \"Central\",\n      PA %in% east       ~ \"East\",\n      PA %in% north      ~ \"North\",\n      PA %in% north_east ~ \"North-East\",\n      PA %in% west       ~ \"West\"\n    ),\n    Region = factor(Region, levels = c(\"Central\",\"East\",\"North-East\",\"North\",\"West\"))\n  ) %>%\n  select(Age, Pop, Region)\n\n# 3. Plot ridgelines starting at the axis\nggplot(ridge_region, aes(x = Age, y = Region, weight = Pop, fill = Region)) +\n  geom_density_ridges(\n    scale           = 1.2,\n    rel_min_height  = 0.01,\n    color           = NA,\n    alpha           = 0.8\n  ) +\n  scale_x_continuous(\n    name   = \"Age (years)\",\n    breaks = seq(0, 90, 10),\n    expand = c(0, 0)\n  ) +\n  scale_y_discrete(expand = c(0, 0)) +\n  scale_fill_manual(values = c(\n    Central      = \"#1f77b4\",\n    East         = \"#ff7f0e\",\n    `North-East` = \"#2ca02c\",\n    North        = \"#d62728\",\n    West         = \"#9467bd\"\n  )) +\n  labs(\n    title    = \"Age Distribution by Region, Singapore 2024\",\n    subtitle = \"Each ridge is weighted by subzone population\",\n    x        = NULL,\n    y        = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    legend.position  = \"none\",\n    plot.title       = element_text(face = \"bold\", hjust = 0.5),\n    plot.subtitle    = element_text(hjust = 0.5, margin = margin(b = 10)),\n    axis.text.x      = element_text(color = \"black\", size = 13),\n    axis.text.y      = element_text(color = \"black\", size = 13),\n    panel.grid.major = element_blank(),\n    panel.grid.minor = element_blank()\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-21-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Define PA → Region lookup\nridge_region <- sgdemo2024 %>%\n  mutate(\n    Region = case_when(\n      PA %in% central    ~ \"Central\",\n      PA %in% east       ~ \"East\",\n      PA %in% north      ~ \"North\",\n      PA %in% north_east ~ \"North-East\",\n      PA %in% west       ~ \"West\"\n    ),\n    Region = factor(Region, levels = c(\"Central\",\"East\",\"North-East\",\"North\",\"West\"))\n  ) %>%\n  select(Age, Pop, Region)\n\n# 2. Compute weighted median age by Region & Sex\nregion_med <- sgdemo2024 %>%\n  mutate(\n    Region = case_when(\n      PA %in% central    ~ \"Central\",\n      PA %in% east       ~ \"East\",\n      PA %in% north      ~ \"North\",\n      PA %in% north_east ~ \"North-East\",\n      PA %in% west       ~ \"West\",\n    ),\n    Region = factor(Region, levels = c(\"Central\",\"East\",\"North-East\",\"North\",\"West\"))\n  ) %>%\n  group_by(Region, Sex) %>%\n  summarise(\n    MedAge = matrixStats::weightedMedian(Age, w = Pop),\n    .groups = \"drop\"\n  )\n\n# 3. Plot grouped bar chart with no gap, 5-year bins, no grid lines\nggplot(region_med, aes(x = Region, y = MedAge, fill = Sex)) +\n  geom_col(\n    position = position_dodge(width = 0.6), \n    width = 0.6\n  ) +\n  scale_fill_manual(values = c(\"Males\" = \"#00C2A1\", \"Females\" = \"#9E00E3\")) +\n  scale_y_continuous(\n    breaks = seq(0, 50, by = 5),\n    limits = c(0, 50),\n    expand = c(0, 0)\n  ) +\n  labs(\n    title = \"Median Age by Sex and Region, Singapore 2024\",\n    x     = NULL,\n    y     = \"Median Age (years)\",\n    fill  = NULL\n  ) +\n  theme_minimal(base_size = 14) +\n  theme(\n    plot.title          = element_text(hjust = 0.5, face = \"bold\", size = 20),\n    axis.text.x         = element_text(color = \"black\", size = 13),\n    axis.text.y         = element_text(color = \"black\", size = 13),\n    panel.grid.major    = element_blank(),\n    panel.grid.minor    = element_blank(),\n    legend.position     = \"bottom\"\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-22-1.png){width=1152}\n:::\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Compute weighted median age by PA & sex\nmed_age <- sgdemo2024 %>%\n  group_by(PA, Sex) %>%\n  summarise(\n    MedAge = matrixStats::weightedMedian(Age, w = Pop),\n    .groups = \"drop\"\n  ) %>%\n  pivot_wider(\n    names_from  = Sex,\n    values_from = MedAge\n  ) %>%\n  rename(Male = Males, Female = Females) %>%\n  arrange((Male + Female) / 2) %>%\n  mutate(PA = factor(PA, levels = PA))\n\n# 2. Plot static dumbbell-like chart with legend on the right\nggplot(med_age, aes(y = PA)) +\n  # a) connecting lines\n  geom_segment(aes(x = Male, xend = Female, yend = PA),\n               color = \"black\", size = 0.5) +\n  # b) male points\n  geom_point(aes(x = Male, color = \"Male\"), size = 4) +\n  # c) female points\n  geom_point(aes(x = Female, color = \"Female\"), size = 4) +\n  # 3. Scale and legend\n  scale_color_manual(\n    name   = \"Sex\",\n    values = c(\"Male\" = \"#00C2A1\", \"Female\" = \"#9E00E3\")\n  ) +\n  scale_x_continuous(\n    breaks = seq(0, 55, by = 5),\n    labels = seq(0, 55, by = 5),\n    limits = c(0, 55),\n    expand = c(0, 0)\n  ) +\n  labs(\n    title = \"Median Age by Sex and Planning Area, Singapore 2024\",\n    x     = \"Median Age (years)\",\n    y     = NULL,\n    color = NULL\n  ) +\n  theme_classic(base_size = 14) +\n  theme(\n    plot.title           = element_text(hjust = 0.5, face = \"bold\"),\n    axis.text.x          = element_text(color = \"black\", size = 14),\n    axis.title.x         = element_text(size = 14),\n    axis.text.y          = element_text(color = \"black\", size = 12),\n    panel.grid.major.x   = element_line(color = \"grey90\", size = 0.2),\n    panel.grid.minor.x   = element_line(color = \"grey90\", size = 0.2),\n    panel.grid.major.y   = element_line(color = \"grey90\", size = 0.2),\n    panel.grid.minor.y   = element_line(color = \"grey90\", size = 0.2),\n    legend.position      = \"bottom\",\n    legend.justification = \"top\",\n    legend.text          = element_text(size = 12)\n  )\n```\n\n::: {.cell-output-display}\n![](Take-home_Ex01_files/figure-html/unnamed-chunk-23-1.png){width=1152}\n:::\n:::\n\n\n`\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# 1. Install/load\nif (!requireNamespace(\"gt\", quietly=TRUE)) install.packages(\"gt\")\nlibrary(dplyr)\nlibrary(gt)\n\n# 2. Define the five region vectors\ncentral    <- c(\"Bishan\",\"Bukit Merah\",\"Bukit Timah\",\"Downtown Core\",\"Geylang\",\n                \"Kallang\",\"Marina East\",\"Marina South\",\"Marine Parade\",\"Museum\",\n                \"Newton\",\"Novena\",\"Orchard\",\"Outram\",\"Queenstown\",\"River Valley\",\n                \"Rochor\",\"Singapore River\",\"Southern Islands\",\"Straits View\",\n                \"Tanglin\",\"Toa Payoh\")\neast       <- c(\"Bedok\",\"Changi\",\"Changi Bay\",\"Pasir Ris\",\"Paya Lebar\",\"Tampines\")\nnorth      <- c(\"Central Water Catchment\",\"Lim Chu Kang\",\"Mandai\",\"Sembawang\",\n                \"Simpang\",\"Sungei Kadut\",\"Woodlands\",\"Yishun\")\nnorth_east <- c(\"Ang Mo Kio\",\"Hougang\",\"North-Eastern Islands\",\"Punggol\",\n                \"Seletar\",\"Sengkang\",\"Serangoon\")\nwest       <- c(\"Boon Lay\",\"Bukit Batok\",\"Bukit Panjang\",\"Choa Chu Kang\",\n                \"Clementi\",\"Jurong East\",\"Jurong West\",\"Pioneer\",\"Tengah\",\n                \"Tuas\",\"Western Islands\",\"Western Water Catchment\")\n\n# 3. Build region_df\nmax_len <- max(length(central), length(east), length(north_east), length(north), length(west))\n\nregion_df <- tibble(\n  Central     = c(central,     rep(NA_character_, max_len - length(central))),\n  East        = c(east,        rep(NA_character_, max_len - length(east))),\n  `North-East`= c(north_east,  rep(NA_character_, max_len - length(north_east))),\n  North       = c(north,       rep(NA_character_, max_len - length(north))),\n  West        = c(west,        rep(NA_character_, max_len - length(west)))\n)\n\n# 4. Palette\nregion_colors <- c(\n  Central      = \"#1f77b4\",\n  East         = \"#ff7f0e\",\n  `North-East` = \"#2ca02c\",\n  North        = \"#d62728\",\n  West         = \"#9467bd\"\n)\n\n# 5. gt with vertical borders\nregion_df %>%\n  gt() %>%\n  fmt_missing(\n    columns      = everything(),\n    missing_text = \"\"\n  ) %>%\n  tab_header(\n    title = md(\"**Planning Areas by Region**\")\n  ) %>%\n  { tbl <- .\n    for (reg in names(region_colors)) {\n      tbl <- tbl %>%\n        tab_style(\n          style = list(\n            cell_fill(color = region_colors[[reg]]),\n            cell_text(weight = \"bold\", color = \"white\")\n          ),\n          locations = cells_column_labels(columns = all_of(reg))\n        )\n    }\n    tbl\n  } %>%\n  # vertical lines between columns\n  tab_style(\n    style = cell_borders(sides = \"right\", color = \"black\", weight = px(1)),\n    locations = cells_body(columns = everything())\n  ) %>%\n  tab_style(\n    style = cell_borders(sides = \"right\", color = \"black\", weight = px(1)),\n    locations = cells_column_labels(columns = everything())\n  ) %>%\n  cols_label(\n    Central      = \"Central\",\n    East         = \"East\",\n    `North-East` = \"North-East\",\n    North        = \"North\",\n    West         = \"West\"\n  ) %>%\n  tab_options(\n    table.border.top.color    = \"black\",\n    table.border.top.width    = px(2),\n    table.border.bottom.color = \"black\",\n    table.border.bottom.width = px(2),\n    table.border.left.color   = \"black\",\n    table.border.left.width   = px(2),\n    table.border.right.color  = \"black\",\n    table.border.right.width  = px(2),\n    data_row.padding          = px(3)\n  )\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div id=\"pbqzjesfsb\" style=\"padding-left:0px;padding-right:0px;padding-top:10px;padding-bottom:10px;overflow-x:auto;overflow-y:auto;width:auto;height:auto;\">\n<style>#pbqzjesfsb table {\n  font-family: system-ui, 'Segoe UI', Roboto, Helvetica, Arial, sans-serif, 'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol', 'Noto Color Emoji';\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n}\n\n#pbqzjesfsb thead, #pbqzjesfsb tbody, #pbqzjesfsb tfoot, #pbqzjesfsb tr, #pbqzjesfsb td, #pbqzjesfsb th {\n  border-style: none;\n}\n\n#pbqzjesfsb p {\n  margin: 0;\n  padding: 0;\n}\n\n#pbqzjesfsb .gt_table {\n  display: table;\n  border-collapse: collapse;\n  line-height: normal;\n  margin-left: auto;\n  margin-right: auto;\n  color: #333333;\n  font-size: 16px;\n  font-weight: normal;\n  font-style: normal;\n  background-color: #FFFFFF;\n  width: auto;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #000000;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #000000;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #000000;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #000000;\n}\n\n#pbqzjesfsb .gt_caption {\n  padding-top: 4px;\n  padding-bottom: 4px;\n}\n\n#pbqzjesfsb .gt_title {\n  color: #333333;\n  font-size: 125%;\n  font-weight: initial;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-color: #FFFFFF;\n  border-bottom-width: 0;\n}\n\n#pbqzjesfsb .gt_subtitle {\n  color: #333333;\n  font-size: 85%;\n  font-weight: initial;\n  padding-top: 3px;\n  padding-bottom: 5px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-color: #FFFFFF;\n  border-top-width: 0;\n}\n\n#pbqzjesfsb .gt_heading {\n  background-color: #FFFFFF;\n  text-align: center;\n  border-bottom-color: #FFFFFF;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_bottom_border {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_col_headings {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_col_heading {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 6px;\n  padding-left: 5px;\n  padding-right: 5px;\n  overflow-x: hidden;\n}\n\n#pbqzjesfsb .gt_column_spanner_outer {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: normal;\n  text-transform: inherit;\n  padding-top: 0;\n  padding-bottom: 0;\n  padding-left: 4px;\n  padding-right: 4px;\n}\n\n#pbqzjesfsb .gt_column_spanner_outer:first-child {\n  padding-left: 0;\n}\n\n#pbqzjesfsb .gt_column_spanner_outer:last-child {\n  padding-right: 0;\n}\n\n#pbqzjesfsb .gt_column_spanner {\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: bottom;\n  padding-top: 5px;\n  padding-bottom: 5px;\n  overflow-x: hidden;\n  display: inline-block;\n  width: 100%;\n}\n\n#pbqzjesfsb .gt_spanner_row {\n  border-bottom-style: hidden;\n}\n\n#pbqzjesfsb .gt_group_heading {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  text-align: left;\n}\n\n#pbqzjesfsb .gt_empty_group_heading {\n  padding: 0.5px;\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  vertical-align: middle;\n}\n\n#pbqzjesfsb .gt_from_md > :first-child {\n  margin-top: 0;\n}\n\n#pbqzjesfsb .gt_from_md > :last-child {\n  margin-bottom: 0;\n}\n\n#pbqzjesfsb .gt_row {\n  padding-top: 3px;\n  padding-bottom: 3px;\n  padding-left: 5px;\n  padding-right: 5px;\n  margin: 10px;\n  border-top-style: solid;\n  border-top-width: 1px;\n  border-top-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 1px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 1px;\n  border-right-color: #D3D3D3;\n  vertical-align: middle;\n  overflow-x: hidden;\n}\n\n#pbqzjesfsb .gt_stub {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pbqzjesfsb .gt_stub_row_group {\n  color: #333333;\n  background-color: #FFFFFF;\n  font-size: 100%;\n  font-weight: initial;\n  text-transform: inherit;\n  border-right-style: solid;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n  padding-left: 5px;\n  padding-right: 5px;\n  vertical-align: top;\n}\n\n#pbqzjesfsb .gt_row_group_first td {\n  border-top-width: 2px;\n}\n\n#pbqzjesfsb .gt_row_group_first th {\n  border-top-width: 2px;\n}\n\n#pbqzjesfsb .gt_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pbqzjesfsb .gt_first_summary_row {\n  border-top-style: solid;\n  border-top-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_first_summary_row.thick {\n  border-top-width: 2px;\n}\n\n#pbqzjesfsb .gt_last_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_grand_summary_row {\n  color: #333333;\n  background-color: #FFFFFF;\n  text-transform: inherit;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pbqzjesfsb .gt_first_grand_summary_row {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-top-style: double;\n  border-top-width: 6px;\n  border-top-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_last_grand_summary_row_top {\n  padding-top: 8px;\n  padding-bottom: 8px;\n  padding-left: 5px;\n  padding-right: 5px;\n  border-bottom-style: double;\n  border-bottom-width: 6px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_striped {\n  background-color: rgba(128, 128, 128, 0.05);\n}\n\n#pbqzjesfsb .gt_table_body {\n  border-top-style: solid;\n  border-top-width: 2px;\n  border-top-color: #D3D3D3;\n  border-bottom-style: solid;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_footnotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_footnote {\n  margin: 0px;\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pbqzjesfsb .gt_sourcenotes {\n  color: #333333;\n  background-color: #FFFFFF;\n  border-bottom-style: none;\n  border-bottom-width: 2px;\n  border-bottom-color: #D3D3D3;\n  border-left-style: none;\n  border-left-width: 2px;\n  border-left-color: #D3D3D3;\n  border-right-style: none;\n  border-right-width: 2px;\n  border-right-color: #D3D3D3;\n}\n\n#pbqzjesfsb .gt_sourcenote {\n  font-size: 90%;\n  padding-top: 4px;\n  padding-bottom: 4px;\n  padding-left: 5px;\n  padding-right: 5px;\n}\n\n#pbqzjesfsb .gt_left {\n  text-align: left;\n}\n\n#pbqzjesfsb .gt_center {\n  text-align: center;\n}\n\n#pbqzjesfsb .gt_right {\n  text-align: right;\n  font-variant-numeric: tabular-nums;\n}\n\n#pbqzjesfsb .gt_font_normal {\n  font-weight: normal;\n}\n\n#pbqzjesfsb .gt_font_bold {\n  font-weight: bold;\n}\n\n#pbqzjesfsb .gt_font_italic {\n  font-style: italic;\n}\n\n#pbqzjesfsb .gt_super {\n  font-size: 65%;\n}\n\n#pbqzjesfsb .gt_footnote_marks {\n  font-size: 75%;\n  vertical-align: 0.4em;\n  position: initial;\n}\n\n#pbqzjesfsb .gt_asterisk {\n  font-size: 100%;\n  vertical-align: 0;\n}\n\n#pbqzjesfsb .gt_indent_1 {\n  text-indent: 5px;\n}\n\n#pbqzjesfsb .gt_indent_2 {\n  text-indent: 10px;\n}\n\n#pbqzjesfsb .gt_indent_3 {\n  text-indent: 15px;\n}\n\n#pbqzjesfsb .gt_indent_4 {\n  text-indent: 20px;\n}\n\n#pbqzjesfsb .gt_indent_5 {\n  text-indent: 25px;\n}\n\n#pbqzjesfsb .katex-display {\n  display: inline-flex !important;\n  margin-bottom: 0.75em !important;\n}\n\n#pbqzjesfsb div.Reactable > div.rt-table > div.rt-thead > div.rt-tr.rt-tr-group-header > div.rt-th-group:after {\n  height: 0px !important;\n}\n</style>\n<table class=\"gt_table\" data-quarto-disable-processing=\"false\" data-quarto-bootstrap=\"false\">\n  <thead>\n    <tr class=\"gt_heading\">\n      <td colspan=\"5\" class=\"gt_heading gt_title gt_font_normal gt_bottom_border\" style><span data-qmd-base64=\"KipQbGFubmluZyBBcmVhcyBieSBSZWdpb24qKg==\"><span class='gt_from_md'><strong>Planning Areas by Region</strong></span></span></td>\n    </tr>\n    \n    <tr class=\"gt_col_headings\">\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #1F77B4; color: #FFFFFF; font-weight: bold; border-right-width: 1px; border-right-style: solid; border-right-color: black;\" scope=\"col\" id=\"Central\">Central</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #FF7F0E; color: #FFFFFF; font-weight: bold; border-right-width: 1px; border-right-style: solid; border-right-color: black;\" scope=\"col\" id=\"East\">East</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #2CA02C; color: #FFFFFF; font-weight: bold; border-right-width: 1px; border-right-style: solid; border-right-color: black;\" scope=\"col\" id=\"North-East\">North-East</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #D62728; color: #FFFFFF; font-weight: bold; border-right-width: 1px; border-right-style: solid; border-right-color: black;\" scope=\"col\" id=\"North\">North</th>\n      <th class=\"gt_col_heading gt_columns_bottom_border gt_left\" rowspan=\"1\" colspan=\"1\" style=\"background-color: #9467BD; color: #FFFFFF; font-weight: bold; border-right-width: 1px; border-right-style: solid; border-right-color: black;\" scope=\"col\" id=\"West\">West</th>\n    </tr>\n  </thead>\n  <tbody class=\"gt_table_body\">\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Bishan</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Bedok</td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Ang Mo Kio</td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Central Water Catchment</td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Boon Lay</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Bukit Merah</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Changi</td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Hougang</td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Lim Chu Kang</td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Bukit Batok</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Bukit Timah</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Changi Bay</td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">North-Eastern Islands</td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Mandai</td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Bukit Panjang</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Downtown Core</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Pasir Ris</td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Punggol</td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Sembawang</td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Choa Chu Kang</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Geylang</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Paya Lebar</td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Seletar</td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Simpang</td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Clementi</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Kallang</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Tampines</td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Sengkang</td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Sungei Kadut</td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Jurong East</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Marina East</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Serangoon</td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Woodlands</td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Jurong West</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Marina South</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Yishun</td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Pioneer</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Marine Parade</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Tengah</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Museum</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Tuas</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Newton</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Western Islands</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Novena</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Western Water Catchment</td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Orchard</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Outram</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Queenstown</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">River Valley</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Rochor</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Singapore River</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Southern Islands</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Straits View</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Tanglin</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n    <tr><td headers=\"Central\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\">Toa Payoh</td>\n<td headers=\"East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North-East\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"North\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td>\n<td headers=\"West\" class=\"gt_row gt_left\" style=\"border-right-width: 1px; border-right-style: solid; border-right-color: black;\"><br /></td></tr>\n  </tbody>\n  \n  \n</table>\n</div>\n```\n\n:::\n:::",
    "supporting": [
      "Take-home_Ex01_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}